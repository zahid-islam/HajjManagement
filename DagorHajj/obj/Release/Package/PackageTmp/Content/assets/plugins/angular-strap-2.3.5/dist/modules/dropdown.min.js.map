{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","evt","keyCode","onBodyClick","directive","target","hide","stopPropagation","items","$element","querySelectorAll","$rootScope","$new","parentEl","index","forEach","preventDefault","focus","length","show","el","i","$onKeyDown","on","hasClass","$isShown","removeClass","destroy","off","scope","parent","prototype","nextSibling","tElement","restrict","compile","classList","templateUrl","parentNode","removeChild","nodeType","outerHTML","tAttrs","isDefined","key","falseValueRegExp","attr","bsDropdown","$watch","newValue","oldValue","content","dropdown","isString","match","bsShow","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function(evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function(el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function() {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            options.keyboard && $dropdown.$element && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function() {\n          if (!$dropdown.$isShown) return;\n          options.keyboard && $dropdown.$element && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function() {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function(tElement, tAttrs) {\n\n        // Directive options\n        var options = {};\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling.classList.contains('dropdown-menu')) {\n            options.template = nextSibling.outerHTML;\n            options.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink(scope, element, attr) {\n\n          // Directive options\n          options.scope = scope;\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id'], function(key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function(key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n              options[key] = false;\n          });\n\n          // Support scope as an object\n          attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\n            scope.content = newValue;\n          }, true);\n\n          // Visibility binding support\n          attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n            if (!dropdown || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n            newValue === true ? dropdown.show() : dropdown.hide();\n          });\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Garbage collection\n          scope.$on('$destroy', function() {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}